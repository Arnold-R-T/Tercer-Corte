
Grafos 

Los grafos son estructuras de datos que representan relaciones entre objetos, 
utilizando nodos (vértices) y aristas (conexiones). Se utilizan para modelar problemas y resolverlos 
mediante algoritmos. Son fundamentales en diversas aplicaciones como redes sociales, mapas y algoritmos 
de búsqueda

Algoritmos Comunes:
 - Búsqueda en profundidad (DFS): Explorar un grafo siguiendo un camino hasta llegar al final, luego 
   volviendo y explorando otro. 
 - Búsqueda en anchura (BFS): Explorar un grafo nivel por nivel, explorando todos los vecinos antes 
   de ir a los siguientes. 
 - Algoritmo de Dijkstra: Encontrar el camino más corto desde un nodo origen a todos los demás nodos. 
 - Algoritmo de Floyd-Warshall: Encontrar el camino más corto entre todos los pares de nodos. 

Tipos de Grafos:
 - Grafo dirigido: Las aristas tienen dirección (un nodo va al otro). 
 - Grafo no dirigido: Las aristas no tienen dirección (la conexión es bidireccional). 
 - Grafo ponderado: Las aristas tienen un peso asociado (ej. distancia, costo). 
 - Grafo completo: Todo nodo está conectado a todos los demás. 
 - Grafo bipartido: Los nodos se pueden dividir en dos grupos, sin aristas entre nodos del mismo grupo.

Estructura de un grafo (php):

<?php
class Grafo {
    public $vertices;
    public $aristas;

    public function __construct() {
        $this->vertices = array();
        $this->aristas = array();
    }

    public function agregarVertices($vertice) {
        $this->vertices[] = $vertice;
        $this->aristas[$vertice] = array();
    }

    public function agregarAristas($vertice1, $vertice2) {
        $this->aristas[$vertice1][] = $vertice2;
        $this->aristas[$vertice2][] = $vertice1;
    }

    public function imprimirGrafo() {
        foreach ($this->vertices as $vertice) {
            echo $vertice . " -> ";
            foreach ($this->aristas[$vertice] as $item) {
                echo $item . " -> ";
            }
            echo ".\n";
        }
    }
}

$miGrafo = new Grafo();
$miGrafo->agregarVertices('A');
$miGrafo->agregarVertices('B');
$miGrafo->agregarVertices('C');
$miGrafo->agregarVertices('D');

$miGrafo->agregarAristas('A', 'B');
$miGrafo->agregarAristas('B', 'C');
$miGrafo->agregarAristas('C', 'A');
$miGrafo->agregarAristas('B', 'D');

echo "El grafo creado es:\n";
$miGrafo->imprimirGrafo();
?> 
 
